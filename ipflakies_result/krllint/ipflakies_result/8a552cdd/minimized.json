{"target": "tests/test_indentation_checker.py::IndentationCheckerTestCase::test_rule_with_fix", "type": "victim", "patch": true, "polluter": {"tests/test_lower_or_mixed_case_keyword.py::LowerOrMixedCaseKeywordTestCase::test_rule_with_fix": [{"cleaner": "tests/test_extraneous_whitespace.py::ExtraneousWhiteSpaceTestCase::test_rule_without_fix", "patch": null}, {"cleaner": "tests/test_indentation_checker.py::IndentationCheckerTestCase::test_rule_without_fix", "patch": {"diff": "59a60,63\n>         cli_args = _create_arg_parser().parse_args(['test_rule_without_fix'])\n>         linter = Linter(cli_args, config)\n>         (lines, reporter) = linter.lint_lines('test_rule_without_fix', self.TEST_INPUT)\n>         self.assertEqual(reporter.found_issues[Category.CONVENTION], 0)\n", "patched_test_file": "ipflakies_result/8a552cdd/patch/test_indentation_checker_PatchProcessed_d4b27aaa.py#", "patch_file": "ipflakies_result/8a552cdd/patch/test_indentation_checker_patch_d4b27aaa.patch", "time": 5.241909673000919, "fixed_polluter(s)": ["tests/test_lower_or_mixed_case_keyword.py::LowerOrMixedCaseKeywordTestCase::test_rule_with_fix"]}}]}, "time": 32.81414794921875}