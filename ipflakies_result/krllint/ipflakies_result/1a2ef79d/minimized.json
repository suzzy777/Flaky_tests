{"target": "tests/test_open_task.py::OpenTaskTestCase::test_rule_with_fix", "type": "victim", "patch": true, "polluter": {"tests/test_lower_or_mixed_case_keyword.py::LowerOrMixedCaseKeywordTestCase::test_rule_with_fix": [{"cleaner": "tests/test_extraneous_whitespace.py::ExtraneousWhiteSpaceTestCase::test_rule_without_fix", "patch": null}, {"cleaner": "tests/test_indentation_checker.py::IndentationCheckerTestCase::test_rule_without_fix", "patch": null}, {"cleaner": "tests/test_lower_or_mixed_case_built_in_type.py::LowerOrMixedCaseBuiltInTestCase::test_rule_without_fix", "patch": {"diff": "33a34,39\n>         cli_args = _create_arg_parser().parse_args(['test_rule_without_fix'])\n>         reload(config)\n>         config.REPORTER = MemoryReporter\n>         linter = Linter(cli_args, config)\n>         (lines, reporter) = linter.lint_lines('test_rule_without_fix', self.TEST_INPUT)\n>         self.assertEqual(reporter.found_issues[Category.CONVENTION], 0)\n", "patched_test_file": "ipflakies_result/1a2ef79d/patch/test_open_task_PatchProcessed_865aaa66.py#", "patch_file": "ipflakies_result/1a2ef79d/patch/test_open_task_patch_865aaa66.patch", "time": 6.918165423005121, "fixed_polluter(s)": ["tests/test_lower_or_mixed_case_keyword.py::LowerOrMixedCaseKeywordTestCase::test_rule_with_fix"]}}]}, "time": 47.05986428260803}