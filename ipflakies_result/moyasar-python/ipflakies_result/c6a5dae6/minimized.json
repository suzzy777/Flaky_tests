{"target": "tests/moyasar_test.py::test_request_should_return_json_object", "type": "brittle", "patch": true, "state-setter": {"tests/moyasar_test.py::test_should_accept_api_key": [{"state-setter": "tests/moyasar_test.py::test_should_accept_api_key", "patch": {"diff": "14a15\n>     moyasar.api_key = 'sk_test_BQokikJOvBiI2HlWgH4olfQ2'\n", "patched_test_file": "ipflakies_result/c6a5dae6/patch/moyasar_test_PatchProcessed_18dd0d73.py#", "patch_file": "ipflakies_result/c6a5dae6/patch/moyasar_test_patch_18dd0d73.patch", "time": 1.5170571289781947}}], "tests/moyasar/invoice_test.py::test_create_should_return_intiated_invoice_for_sadad_source": [], "tests/moyasar/invoice_test.py::test_list_should_return_list_of_invoice_objects": [], "tests/moyasar/invoice_test.py::test_find_should_return_invoice_object_if_id_is_correct": [], "tests/moyasar/invoice_test.py::test_update_should_update_invoice_description": [], "tests/moyasar/invoice_test.py::test_cancel_should_return_invoice_object_if_id_is_correct": [], "tests/moyasar/invoice_test.py::test_eqaulity_check_holds_among_identical_invoices_only": [], "tests/moyasar/invoice_test.py::test_eqaulity_check_differentiate_non_identical_invoices": [], "tests/moyasar/payment_test.py::test_list_should_return_list_of_payment_objects": [], "tests/moyasar/payment_test.py::test_find_should_return_payemnt_object_if_id_is_correct": [], "tests/moyasar/payment_test.py::test_update_should_update_payment_description": [], "tests/moyasar/payment_test.py::test_eqaulity_check_holds_among_identical_payments_only": [], "tests/moyasar/payment_test.py::test_eqaulity_check_differentiate_non_identical_payments": [], "tests/moyasar/payment_test.py::test_capture_should_return_payment_object_upon_success": [], "tests/moyasar/payment_test.py::test_void_should_return_payment_object_upon_success": []}, "time": 29.963823080062866}